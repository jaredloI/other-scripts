if getgenv().extlaws == true then
	game.StarterGui:SetCore("SendNotification", {
		Title = "Extlaw$ - DHC";
		Text = "Already Loaded";
	})
	return
end
getgenv().extlaws = true

loadstring(game:HttpGet('https://raw.githubusercontent.com/i-reddd/other-scripts/main/chatspy'))()

loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/i-reddd/other-scripts/main/uilib"))()

loadstring(game:HttpGet('https://raw.githubusercontent.com/OG5/IkuScripts/main/DH/MoneyCounter', true))()

spawn(function()
	Admins = {"JokeTheFool","ITopStarI" ,"Sherosama", "Papa_Mbaye",
		"AStrongMuscle", "iRenn", "NikoSenpai", "UziGarage", "iumu",
		"Benoxa", "Luutyy", "clubstar54", "givkitheth", "zakblak20",
		"MarTheWise", "BeeTheKidd", "qtCeleste", "coreten", "LegacyCross",
		"NatsuDBlaze", "Asuyia", "POMPKUN", "Untold_Joke", "MoodJesus", "AfroDs",
		"MarkoSumisu", "Greed_Ocean","givkitheth", "DrxcoBaby" , "DrxcoRxsh", "XavierWildYT",
		"dtbbullet", "ATKDrizzy", "bull_bot"
	} 
	for i, players in pairs(game:GetService("Players"):GetPlayers()) do
		if players.Name == unpack(Admins) then
			game:GetService("Players").LocalPlayer:Kick("Anti Ban : Admin Joined, Kicked To Prevent Ban")
		end
	end

	game:GetService("Players").PlayerAdded:Connect(function(Player)
		if Player.Name == unpack(Admins) then
			game:GetService("Players").LocalPlayer:Kick("Anti Ban : Admin Joined, Kicked To Prevent Ban") 
		end
	end)
end)

-- // Vars
local detectionVectors = {
	CHECKER_1 = true,
	TeleportDetect = true,
	OneMoreTime = true,
	BANREMOTE = true,
	KICKREMOTE = true
}

-- // Metatable vars
local mt = getrawmetatable(game)
local backupnamecall = mt.__namecall
setreadonly(mt, false)

-- // Hook
mt.__namecall = newcclosure(function(...)
	-- // Vars
	local method = getnamecallmethod()
	local args = {...}

	-- // Check if it trying to do naughty
	if (method == "FireServer" and tostring(args[1]) == "MainEvent" and detectionVectors[args[2]]) then
		return wait(9e9)
	end

	if (method == "CHECKER_1" and tostring(args[1]) == "MainEvent" and detectionVectors[args[2]]) then
		return wait(9e9)
	end

	if (method == "KICKREMOTE" and tostring(args[1]) == "MainEvent" and detectionVectors[args[2]]) then
		return wait(9e9)
	end

	if (method == "BANREMOTE" and tostring(args[1]) == "MainEvent" and detectionVectors[args[2]]) then
		return wait(9e9)
	end


	-- // Fly Bypass
	if (not checkcaller() and getfenv(1).crash ~= nil and getfenv(1).checkChild ~= nil) then
		getcallingscript():Destroy()
		return wait(9e9)
	end

	-- // Return
	return backupnamecall(...)
end)

-- // End Metatable
setreadonly(mt, true)


function toTarget(d, C, D)
	local E = game:service"TweenService"
	local F = TweenInfo.new((C - d).Magnitude / 170, Enum.EasingStyle.Quad)
	local G = tick()
	local H, I = pcall(function()
		local H = E:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], F, {
			CFrame = D
		})
		H:Play()
	end)
	if not H then
		return I
	end
end;

function ToShoes(d, C, D)
	local E = game:service"TweenService"
	local F = TweenInfo.new((C - d).Magnitude / 50, Enum.EasingStyle.Quad)
	local G = tick()
	local H, I = pcall(function()
		local H = E:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], F, {
			CFrame = D
		})
		H:Play()
	end)
	if not H then
		return I
	end
end;
local function J(K, L)
	local M = (K.Position - L.Position).magnitude;
	if M <= 50 then
		fireclickdetector(L:FindFirstChild("ClickDetector"), 4)
		return M
	end
end;


function GetPlayer(String)
	local Found = {}
	local strl = String:lower()
	for i,v in pairs(game.Players:GetPlayers()) do
		if v.Name:lower():sub(1, #String) == String:lower() or v.DisplayName:lower():sub(1, #String) == String:lower() then
			table.insert(Found,v.Name)
		end
	end    
	return Found    
end

local function FindPlrOnMouse()
	for i, v in pairs(game.Workspace:FindPartsInRegion3(Region3.new(game.Players.LocalPlayer:GetMouse().Hit.Position, game.Players.LocalPlayer:GetMouse().Hit.Position))) do
		local plr = game.Players:GetPlayerFromCharacter(v.Parent)
		if plr ~= nil and plr ~= game.Players.LocalPlayer then
			return plr
		end
	end
	return nil
end
-- // Starter \\ --
CreateWindow("Extlaw$ - DHC")
CreateMenu("Home")
CreateMenu("Money")
CreateMenu("Target")

CreateValueButton("Fly [X]", "Home", "Fly Speed", function(NumberSpeed)
	pcall(function()
		CreateNotification("Fly Keybind [X]", 5)
		if NumberSpeed == nil then
			NumberSpeed = 15 
		end

		local plr = game:GetService("Players").LocalPlayer
		local mouse = plr:GetMouse()


		localplayer = game:GetService("Players").LocalPlayer

		if workspace:FindFirstChild("Core") then
			workspace.Core:Destroy()
		end

		local Core = Instance.new("Part")
		Core.Name = "Core"
		Core.Size = Vector3.new(0.05, 0.05, 0.05)

		spawn(function()
			Core.Parent = workspace
			local Weld = Instance.new("Weld", Core)
			Weld.Part0 = Core
			Weld.Part1 = game:GetService("Players").LocalPlayer.Character.LowerTorso
			Weld.C0 = CFrame.new(0, 0, 0)
		end)

		workspace:WaitForChild("Core")

		local torso = game:GetService("Players").LocalPlayer.Character.LowerTorso
		flying = true
		local speed=NumberSpeed
		local keys={a=false,d=false,w=false,s=false} 
		local e1
		local e2
		local function start()
			pcall(function()
				local pos = Instance.new("BodyPosition", game:GetService("Players").LocalPlayer.Character:FindFirstChild("LowerTorso"))
				local gyro = Instance.new("BodyGyro", game:GetService("Players").LocalPlayer.Character:FindFirstChild("LowerTorso"))
				pos.Name="EPIXPOS"
				pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
				pos.position = game:GetService("Players").LocalPlayer.Character:FindFirstChild("LowerTorso").Position
				gyro.maxTorque = Vector3.new(15e15, 15e15, 15e15)
				gyro.cframe = game:GetService("Players").LocalPlayer.Character:FindFirstChild("LowerTorso").CFrame
				repeat
					wait()
					game:GetService("Players").LocalPlayer.Character.Humanoid.PlatformStand=true
					local new=gyro.cframe - gyro.cframe.p + pos.position
					if not keys.w and not keys.s and not keys.a and not keys.d then
						speed=NumberSpeed
					end
					if keys.w then 
						new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
						speed=speed+0
					end
					if keys.s then 
						new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
						speed=speed+0
					end
					if keys.d then 
						new = new * CFrame.new(speed,0,0)
						speed=speed+0
					end
					if keys.a then 
						new = new * CFrame.new(-speed,0,0)
						speed=speed+0
					end
					if speed>NumberSpeed*2 then
						speed=NumberSpeed
					end
					pos.position=new.p
					if keys.w then
						gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
					elseif keys.s then
						gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
					else
						gyro.cframe = workspace.CurrentCamera.CoordinateFrame
					end
				until flying == false
				if gyro then gyro:Destroy() end
				if pos then pos:Destroy() end
				flying=false
				game:GetService("Players").LocalPlayer.Character.Humanoid.PlatformStand = false
				speed=NumberSpeed
			end)
		end
		e1=mouse.KeyDown:connect(function(key)
			if not game:GetService("Players").LocalPlayer.Character:FindFirstChild("LowerTorso") or not game:GetService("Players").LocalPlayer.Character:FindFirstChild("LowerTorso").Parent then flying=false e1:disconnect() e2:disconnect() return end
			if key=="w" then
				keys.w=true
			elseif key=="s" then
				keys.s=true
			elseif key=="a" then
				keys.a=true
			elseif key=="d" then
				keys.d=true
			elseif key=="x" then
				if flying==true then
					flying=false
				else
					flying=true
					start()
				end
			end
		end)
		e2=mouse.KeyUp:connect(function(key)
			if key=="w" then
				keys.w=false
			elseif key=="s" then
				keys.s=false
			elseif key=="a" then
				keys.a=false
			elseif key=="d" then
				keys.d=false
			end
		end)
		start()
	end)
end)

CreateRegButton("Fake Macro [Z]", "Home", function()
    CreateNotification("Fake Macro [Z]", 5)
    local name = 500
    local keybind = "z"
    gv = false
        plr = game.Players.LocalPlayer
        mouse = plr:GetMouse()
        mouse.KeyDown:connect(function(key)
            if key == keybind and gv == false then
                gv = true
                game.Players.LocalPlayer.Character.Humanoid.Name = "Humz"
                game.Players.LocalPlayer.Character.Humz.WalkSpeed = name
                game.Players.LocalPlayer.Character.Humz.JumpPower = 50
            elseif key == keybind and gv == true then
                gv = false
                game.Players.LocalPlayer.Character.Humz.WalkSpeed = 16
                game.Players.LocalPlayer.Character.Humz.JumpPower = 50
                game.Players.LocalPlayer.Character.Humz.Name = "Humanoid"
            end
        end)
end)

CreateRegButton("Force Reset", "Home", function()
	local LS = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
	for i, v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
		if v:IsA("Part") or v:IsA("MeshPart") or v:IsA("Accessory") then
			v:Destroy() 
		end
	end
	wait(1)
	repeat
		wait()
	until game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	repeat
		wait()
	until game:GetService("Players").LocalPlayer.Character:FindFirstChild("FULLY_LOADED_CHAR")
	game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = LS
end)

CreateRegButton("Free Cam [B]", "Home", function()
	local pi    = math.pi
	local abs   = math.abs
	local clamp = math.clamp
	local exp   = math.exp
	local rad   = math.rad
	local sign  = math.sign
	local sqrt  = math.sqrt
	local tan   = math.tan

	local ContextActionService = game:GetService("ContextActionService")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local StarterGui = game:GetService("StarterGui")
	local UserInputService = game:GetService("UserInputService")
	local Workspace = game:GetService("Workspace")

	local LocalPlayer = Players.LocalPlayer
	if not LocalPlayer then
		Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
		LocalPlayer = Players.LocalPlayer
	end

	local Camera = Workspace.CurrentCamera
	Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		local newCamera = Workspace.CurrentCamera
		if newCamera then
			Camera = newCamera
		end
	end)

	------------------------------------------------------------------------

	local TOGGLE_INPUT_PRIORITY = Enum.ContextActionPriority.Low.Value
	local INPUT_PRIORITY = Enum.ContextActionPriority.High.Value
	local FREECAM_MACRO_KB = Enum.KeyCode.B

	local NAV_GAIN = Vector3.new(1, 1, 1)*64
	local PAN_GAIN = Vector2.new(0.75, 1)*8
	local FOV_GAIN = 300

	local PITCH_LIMIT = rad(90)

	local VEL_STIFFNESS = 1.5
	local PAN_STIFFNESS = 1.0
	local FOV_STIFFNESS = 4.0

	------------------------------------------------------------------------

	local Spring = {} do
		Spring.__index = Spring

		function Spring.new(freq, pos)
			local self = setmetatable({}, Spring)
			self.f = freq
			self.p = pos
			self.v = pos*0
			return self
		end

		function Spring:Update(dt, goal)
			local f = self.f*2*pi
			local p0 = self.p
			local v0 = self.v

			local offset = goal - p0
			local decay = exp(-f*dt)

			local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
			local v1 = (f*dt*(offset*f - v0) + v0)*decay

			self.p = p1
			self.v = v1

			return p1
		end

		function Spring:Reset(pos)
			self.p = pos
			self.v = pos*0
		end
	end

	------------------------------------------------------------------------

	local cameraPos = Vector3.new()
	local cameraRot = Vector2.new()
	local cameraFov = 0

	local velSpring = Spring.new(VEL_STIFFNESS, Vector3.new())
	local panSpring = Spring.new(PAN_STIFFNESS, Vector2.new())
	local fovSpring = Spring.new(FOV_STIFFNESS, 0)

	------------------------------------------------------------------------

	local Input = {} do
		local thumbstickCurve do
			local K_CURVATURE = 2.0
			local K_DEADZONE = 0.15

			local function fCurve(x)
				return (exp(K_CURVATURE*x) - 1)/(exp(K_CURVATURE) - 1)
			end

			local function fDeadzone(x)
				return fCurve((x - K_DEADZONE)/(1 - K_DEADZONE))
			end

			function thumbstickCurve(x)
				return sign(x)*clamp(fDeadzone(abs(x)), 0, 1)
			end
		end

		local gamepad = {
			ButtonX = 0,
			ButtonY = 0,
			DPadDown = 0,
			DPadUp = 0,
			ButtonL2 = 0,
			ButtonR2 = 0,
			Thumbstick1 = Vector2.new(),
			Thumbstick2 = Vector2.new(),
		}

		local keyboard = {
			W = 0,
			A = 0,
			S = 0,
			D = 0,
			E = 0,
			Q = 0,
			U = 0,
			H = 0,
			J = 0,
			K = 0,
			I = 0,
			Y = 0,
			Up = 0,
			Down = 0,
			LeftShift = 0,
			RightShift = 0,
		}

		local mouse = {
			Delta = Vector2.new(),
			MouseWheel = 0,
		}

		local NAV_GAMEPAD_SPEED  = Vector3.new(1, 1, 1)
		local NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
		local PAN_MOUSE_SPEED    = Vector2.new(1, 1)*(pi/64)
		local PAN_GAMEPAD_SPEED  = Vector2.new(1, 1)*(pi/8)
		local FOV_WHEEL_SPEED    = 1.0
		local FOV_GAMEPAD_SPEED  = 0.25
		local NAV_ADJ_SPEED      = 0.75
		local NAV_SHIFT_MUL      = 0.25

		local navSpeed = 1

		function Input.Vel(dt)
			navSpeed = clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)

			local kGamepad = Vector3.new(
				thumbstickCurve(gamepad.Thumbstick1.x),
				thumbstickCurve(gamepad.ButtonR2) - thumbstickCurve(gamepad.ButtonL2),
				thumbstickCurve(-gamepad.Thumbstick1.y)
			)*NAV_GAMEPAD_SPEED

			local kKeyboard = Vector3.new(
				keyboard.D - keyboard.A + keyboard.K - keyboard.H,
				keyboard.E - keyboard.Q + keyboard.I - keyboard.Y,
				keyboard.S - keyboard.W + keyboard.J - keyboard.U
			)*NAV_KEYBOARD_SPEED

			local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.RightShift)

			return (kGamepad + kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
		end

		function Input.Pan(dt)
			local kGamepad = Vector2.new(
				thumbstickCurve(gamepad.Thumbstick2.y),
				thumbstickCurve(-gamepad.Thumbstick2.x)
			)*PAN_GAMEPAD_SPEED
			local kMouse = mouse.Delta*PAN_MOUSE_SPEED
			mouse.Delta = Vector2.new()
			return kGamepad + kMouse
		end

		function Input.Fov(dt)
			local kGamepad = (gamepad.ButtonX - gamepad.ButtonY)*FOV_GAMEPAD_SPEED
			local kMouse = mouse.MouseWheel*FOV_WHEEL_SPEED
			mouse.MouseWheel = 0
			return kGamepad + kMouse
		end

		do
			local function Keypress(action, state, input)
				keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end

			local function GpButton(action, state, input)
				gamepad[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end

			local function MousePan(action, state, input)
				local delta = input.Delta
				mouse.Delta = Vector2.new(-delta.y, -delta.x)
				return Enum.ContextActionResult.Sink
			end

			local function Thumb(action, state, input)
				gamepad[input.KeyCode.Name] = input.Position
				return Enum.ContextActionResult.Sink
			end

			local function Trigger(action, state, input)
				gamepad[input.KeyCode.Name] = input.Position.z
				return Enum.ContextActionResult.Sink
			end

			local function MouseWheel(action, state, input)
				mouse[input.UserInputType.Name] = -input.Position.z
				return Enum.ContextActionResult.Sink
			end

			local function Zero(t)
				for k, v in pairs(t) do
					t[k] = v*0
				end
			end

			function Input.StartCapture()
				ContextActionService:BindActionAtPriority("FreecamKeyboard", Keypress, false, INPUT_PRIORITY,
					Enum.KeyCode.W, Enum.KeyCode.U,
					Enum.KeyCode.A, Enum.KeyCode.H,
					Enum.KeyCode.S, Enum.KeyCode.J,
					Enum.KeyCode.D, Enum.KeyCode.K,
					Enum.KeyCode.E, Enum.KeyCode.I,
					Enum.KeyCode.Q, Enum.KeyCode.Y,
					Enum.KeyCode.Up, Enum.KeyCode.Down
				)
				ContextActionService:BindActionAtPriority("FreecamMousePan",          MousePan,   false, INPUT_PRIORITY, Enum.UserInputType.MouseMovement)
				ContextActionService:BindActionAtPriority("FreecamMouseWheel",        MouseWheel, false, INPUT_PRIORITY, Enum.UserInputType.MouseWheel)
				ContextActionService:BindActionAtPriority("FreecamGamepadButton",     GpButton,   false, INPUT_PRIORITY, Enum.KeyCode.ButtonX, Enum.KeyCode.ButtonY)
				ContextActionService:BindActionAtPriority("FreecamGamepadTrigger",    Trigger,    false, INPUT_PRIORITY, Enum.KeyCode.ButtonR2, Enum.KeyCode.ButtonL2)
				ContextActionService:BindActionAtPriority("FreecamGamepadThumbstick", Thumb,      false, INPUT_PRIORITY, Enum.KeyCode.Thumbstick1, Enum.KeyCode.Thumbstick2)
			end

			function Input.StopCapture()
				navSpeed = 1
				Zero(gamepad)
				Zero(keyboard)
				Zero(mouse)
				ContextActionService:UnbindAction("FreecamKeyboard")
				ContextActionService:UnbindAction("FreecamMousePan")
				ContextActionService:UnbindAction("FreecamMouseWheel")
				ContextActionService:UnbindAction("FreecamGamepadButton")
				ContextActionService:UnbindAction("FreecamGamepadTrigger")
				ContextActionService:UnbindAction("FreecamGamepadThumbstick")
			end
		end
	end

	local function GetFocusDistance(cameraFrame)
		local znear = 0.1
		local viewport = Camera.ViewportSize
		local projy = 2*tan(cameraFov/2)
		local projx = viewport.x/viewport.y*projy
		local fx = cameraFrame.rightVector
		local fy = cameraFrame.upVector
		local fz = cameraFrame.lookVector

		local minVect = Vector3.new()
		local minDist = 512

		for x = 0, 1, 0.5 do
			for y = 0, 1, 0.5 do
				local cx = (x - 0.5)*projx
				local cy = (y - 0.5)*projy
				local offset = fx*cx - fy*cy + fz
				local origin = cameraFrame.p + offset*znear
				local _, hit = Workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
				local dist = (hit - origin).magnitude
				if minDist > dist then
					minDist = dist
					minVect = offset.unit
				end
			end
		end

		return fz:Dot(minVect)*minDist
	end

	------------------------------------------------------------------------

	local function StepFreecam(dt)
		local vel = velSpring:Update(dt, Input.Vel(dt))
		local pan = panSpring:Update(dt, Input.Pan(dt))
		local fov = fovSpring:Update(dt, Input.Fov(dt))

		local zoomFactor = sqrt(tan(rad(70/2))/tan(rad(cameraFov/2)))

		cameraFov = clamp(cameraFov + fov*FOV_GAIN*(dt/zoomFactor), 1, 120)
		cameraRot = cameraRot + pan*PAN_GAIN*(dt/zoomFactor)
		cameraRot = Vector2.new(clamp(cameraRot.x, -PITCH_LIMIT, PITCH_LIMIT), cameraRot.y%(2*pi))

		local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*NAV_GAIN*dt)
		cameraPos = cameraCFrame.p

		Camera.CFrame = cameraCFrame
		Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
		Camera.FieldOfView = cameraFov
	end

	------------------------------------------------------------------------

	local PlayerState = {} do
		local mouseBehavior
		local mouseIconEnabled
		local cameraType
		local cameraFocus
		local cameraCFrame
		local cameraFieldOfView
		local screenGuis = {}
		local coreGuis = {
			Backpack = true,
			Chat = true,
			Health = true,
			PlayerList = true,
		}
		local setCores = {
			BadgesNotificationsActive = true,
			PointsNotificationsActive = true,
		}

		-- Save state and set up for freecam
		function PlayerState.Push()
			for name in pairs(coreGuis) do
				coreGuis[name] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType[name])
				StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], false)
			end
			for name in pairs(setCores) do
				setCores[name] = StarterGui:GetCore(name)
				StarterGui:SetCore(name, false)
			end
			local playergui = LocalPlayer:FindFirstChildOfClass("PlayerGui")
			if playergui then
				for _, gui in pairs(playergui:GetChildren()) do
					if gui:IsA("ScreenGui") and gui.Enabled then
						screenGuis[#screenGuis + 1] = gui
						gui.Enabled = false
					end
				end
			end

			cameraFieldOfView = Camera.FieldOfView
			Camera.FieldOfView = 70

			cameraType = Camera.CameraType
			Camera.CameraType = Enum.CameraType.Custom

			cameraCFrame = Camera.CFrame
			cameraFocus = Camera.Focus

			mouseIconEnabled = UserInputService.MouseIconEnabled
			UserInputService.MouseIconEnabled = false

			mouseBehavior = UserInputService.MouseBehavior
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end

		-- Restore state
		function PlayerState.Pop()
			for name, isEnabled in pairs(coreGuis) do
				StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], isEnabled)
			end
			for name, isEnabled in pairs(setCores) do
				StarterGui:SetCore(name, isEnabled)
			end
			for _, gui in pairs(screenGuis) do
				if gui.Parent then
					gui.Enabled = true
				end
			end

			Camera.FieldOfView = cameraFieldOfView
			cameraFieldOfView = nil

			Camera.CameraType = cameraType
			cameraType = nil

			Camera.CFrame = cameraCFrame
			cameraCFrame = nil

			Camera.Focus = cameraFocus
			cameraFocus = nil

			UserInputService.MouseIconEnabled = mouseIconEnabled
			mouseIconEnabled = nil

			UserInputService.MouseBehavior = mouseBehavior
			mouseBehavior = nil
		end
	end

	local function StartFreecam()
		local cameraCFrame = Camera.CFrame
		cameraRot = Vector2.new(cameraCFrame:toEulerAnglesYXZ())
		cameraPos = cameraCFrame.p
		cameraFov = Camera.FieldOfView

		velSpring:Reset(Vector3.new())
		panSpring:Reset(Vector2.new())
		fovSpring:Reset(0)

		PlayerState.Push()
		RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
		Input.StartCapture()
	end

	local function StopFreecam()
		Input.StopCapture()
		RunService:UnbindFromRenderStep("Freecam")
		PlayerState.Pop()
	end

	------------------------------------------------------------------------

	do
		local enabled = false

		local function ToggleFreecam()
			if enabled then
				StopFreecam()
			else
				StartFreecam()
			end
			enabled = not enabled
		end

		local function HandleActivationInput(action, state, input)
			if state == Enum.UserInputState.Begin then
				if input.KeyCode == FREECAM_MACRO_KB then
					ToggleFreecam()
				end
			end
			return Enum.ContextActionResult.Pass
		end

		ContextActionService:BindActionAtPriority("FreecamToggle", HandleActivationInput, false, TOGGLE_INPUT_PRIORITY, FREECAM_MACRO_KB)
	end
end)

CreateSearchButton("Bring Player", "Target", function(InputtedText)
	local LS = game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
	for i, v in pairs(GetPlayer(InputtedText)) do
		repeat
			if game:GetService("Players")[v].Character:FindFirstChild("BodyEffects"):FindFirstChild("K.O").Value == false then
				if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Combat") then
					game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Combat")) 
				end
				game:GetService("Players").LocalPlayer.Character:FindFirstChild("Combat"):Activate()
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v].Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
				game:GetService("RunService").Heartbeat:Wait()
			end
		until game:GetService("Players")[v].Character:FindFirstChild("BodyEffects"):FindFirstChild("K.O").Value == true
		repeat
			if not game:GetService("Players")[v].Character:FindFirstChild("GRABBING_CONSTRAINT") then
				game:GetService("ReplicatedStorage").MainEvent:FireServer("Grabbing", false)  
			end
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game:GetService("Players")[v].Character.UpperTorso.Position + Vector3.new(0, 3, 0))
			wait(.5)
		until game:GetService("Players")[v].Character:FindFirstChild("GRABBING_CONSTRAINT") or game:GetService("Players")[v].Character:FindFirstChild("BodyEffects"):FindFirstChild("K.O").Value == false
		wait(.5)
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = LS
		repeat
			wait(.5)
		until game:GetService("Players")[v].Character.BodyEffects:FindFirstChild("K.O").Value == false and not game:GetService("Players")[v].Character:FindFirstChild("GRABBING_CONSTRAINT") or game:GetService("Players")[v].Character.Parent == nil
	end
end)

CreateSearchButton("Teleport to", "Target", function(InputtedText)
	for i, v in pairs(GetPlayer(InputtedText)) do
		game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v].Character.HumanoidRootPart.CFrame
	end
end)

_G.Spectate = false
CreateToggleSearch("Spectate", "Target", (_G.Spectate), function(InputtedText)
	if _G.Spectate == true then
		_G.Spectate = false
		game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players").LocalPlayer.Character.Humanoid
	else
		_G.Spectate = true
	end

	for i, v in pairs(GetPlayer(InputtedText)) do
		if _G.Spectate == true then
			game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v].Character 
		else
			game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players").LocalPlayer.Character.Humanoid
		end
	end
end)

CreateSearchButton("Cash", "Target", function(InputtedText)
	for i, v in pairs(GetPlayer(InputtedText)) do
		game.StarterGui:SetCore("SendNotification", {
			Title = "Extlaw$ - DHC";
			Text = v.."'s cash is: ".. game.Players[v].DataFolder.Currency.Value; 
			Duration = 5;
		})
	end
end)

_G.MoneyRound = false
CreateTogButton("Cash Aura", "Money", (_G.MoneyRound), function()
	if _G.MoneyRound == true then
		_G.MoneyRound = false
	else
		_G.MoneyRound = true
	end

	while _G.MoneyRound == true and game:GetService("RunService").Heartbeat:Wait() do
		game.Players.LocalPlayer.PlayerGui.Framework.CurrencySound.Volume = 0
		for e, f in pairs(game.Workspace.Ignored.Drop:GetChildren()) do
			if f.Name == "MoneyDrop" then
				if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - f.Position).Magnitude <= 50 then
					wait(0)
					fireclickdetector(f:FindFirstChild("ClickDetector"), 4)
				end
			end
		end

		local function J(K, L)
			local M = (K.Position - L.Position).magnitude
			if M <= 50 then
				fireclickdetector(L:FindFirstChild("ClickDetector"), 4)
				return M
			end
		end
		for N, O in pairs(game.Workspace.Ignored.Drop:GetChildren()) do
			if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - O.Position).Magnitude <= 50 then
				local P = O
				J(game.Players.LocalPlayer.Character.HumanoidRootPart, O)
				wait()
			end
		end
	end
end)

_G.CustomDrop = false
CreateNumberToggle("Drop Cash", "Money", "100-10000", function(Input)
	if _G.CustomDrop == true then
		_G.CustomDrop = false
	else
		_G.CustomDrop = true
	end

	if Input < 100 then
		Input = 100
	elseif Input > 10000 then
		Input = 10000
	end

	while _G.CustomDrop == true and game:GetService("RunService").Heartbeat:Wait() do
		game:GetService("ReplicatedStorage").MainEvent:FireServer("DropMoney", tostring(Input))
	end
end)

_G.InvisibleCash = false
CreateTogButton("Invisible Money",  "Money", (_G.InvisibleCash), function()
	if _G.InvisibleCash == true then
		_G.InvisibleCash = false
		for i, v in pairs(game:GetService("Workspace").Ignored.Drop:GetChildren()) do
			if v.Name == "MoneyDrop" then
				for i, v2 in pairs(v:GetChildren()) do
					if v2:IsA("Decal") then
						v2.Transparency = 0 
					end
				end
				v.Transparency = 0 
			end
		end
	else
		_G.InvisibleCash = true
		for i, v in pairs(game:GetService("Workspace").Ignored.Drop:GetChildren()) do
			if v.Name == "MoneyDrop" then
				for i, v2 in pairs(v:GetChildren()) do
					if v2:IsA("Decal") then
						v2.Transparency = 1
					end
				end
				v.Transparency = 1
			end
		end
	end
end)

CreateRegButton("Cash ESP", "Money", function()
	local ESPholder = Instance.new("Folder", game.CoreGui)
	function cham(object)
		if object.Name == "MoneyDrop" then
			local a = Instance.new("BoxHandleAdornment", ESPholder)
			a.Adornee = object
			a.AlwaysOnTop = true
			a.ZIndex = 10
			a.Size = object.Size
			a.Transparency = 0.3
			a.Color = object.BrickColor
			local bill = object:WaitForChild("BillboardGui")
			bill.AlwaysOnTop = true
			bill.Size = UDim2.new(2, 10, 1, 5)
			spawn(function()
				while true do
					if object.Parent.ChildRemoving:wait() == object then
						a:Destroy()
						break
					end
				end
			end)
		end
	end
	for i, v in next, game.Workspace.Ignored.Drop:GetChildren() do
		cham(v)
	end
	game.Workspace.Ignored.Drop.ChildAdded:connect(cham)
end)
